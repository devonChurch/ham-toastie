.pattern {
    height: 0;
    overflow: hidden;
    position: relative;
    width: 100%;
}

.pattern__wrapper {
    @include fillContainer;

    .pattern--trueTransition & {
        animation: {
            direction: alternate;
            duration: $zoom__speed;
            iteration-count: infinite;
            name: zoom;
            // timing-function: $easeInOutQuad;
        }
    }
}

.pattern__row {

    &:nth-of-type(odd) {

        .pattern__segment:nth-child(odd) .pattern__flip  {
            transform: rotateX(180deg);
        }

        .pattern__segment:nth-child(even) .pattern__flip {
            transform: rotateX(180deg) rotateY(180deg);
        }
    }

    &:nth-of-type(even) .pattern__segment:nth-child(even) .pattern__flip {
        transform: rotateY(180deg);
    }
}

.pattern__segment {
	float: left;
	height: 0;
	position: relative;
	transform-origin: left top;

    @for $i from 1 through $max / 2 {

        $axis: $i * 2;

        .pattern--yAxis#{$axis}.pattern--trueTransition &,
        .pattern--yAxis#{$axis}.pattern--trueTransition & {
            animation-name: pulseAxis#{$axis};
        }

    }

    .pattern--trueTransition & {
        animation: {
            duration: $pulse__speed;
            iteration-count: infinite;
            // name: pulseX; // Generated via _pulse.scss
            timing-function: ease-out;
        }
    }
}

.pattern__flip {
    @include fillContainer;
}

.pattern__rotate {
    @include fillContainer;

    @for $i from 0 through 3 {

        $deg: $i * 90;

        &--#{$deg} {
            transform: rotate(#{$deg}deg);
        }
    }
}

.pattern__svg {
    height: auto;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;

    &:nth-of-type(2) {
        transform: rotate(90deg) rotateX(180deg);
    }

    &:nth-of-type(1n+3) {
        opacity: 0.5;
    }

    &:nth-of-type(3) {
        transform: rotateX(180deg) rotateY(180deg);
    }

    &:nth-of-type(4) {
        transform: rotate(-90deg) rotateX(180deg);
    }
}
